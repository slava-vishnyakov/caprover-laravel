name: "Run Tests"

on:
  schedule:
    - cron: '0 0 * * *'

  workflow_dispatch:

  pull_request:
    branches:
      - "*"
  push:
    branches:
      - "*"

jobs:
  run-tests:
    runs-on: "ubuntu-24.04"

    steps:
      - name: "Checkout code"
        uses: "actions/checkout@v2"

      - name: Set up Docker Buildx
        uses: "docker/setup-buildx-action@v1"

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "8.2"

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v2"
        with:
          path: "~/.composer/cache"
          key: "php-8.2-composer-locked-${{ hashFiles('composer.lock') }}"
          restore-keys: "php-8.2-composer-locked-"

      - name: "Install dependencies with composer"
        run: "composer install --no-interaction --no-progress"

      - name: "Install laravel"
        run: "composer global require laravel/installer:dev-master"

      #      - name: Setup upterm session
      #        uses: lhotari/action-upterm@v1

      - shell: 'script -q -e -c "bash {0}"'
        run: "./caprover-laravel new project1 project1 --no-interaction"

      - run: "cd project1 && php artisan serve &"

      - run: "sleep 2"

      - run: "curl -s 127.0.0.1:8000"

      - run: "(curl -s 127.0.0.1:8000 | grep Laravel) || false"

      - name: Build and cache Docker images
        uses: "docker/build-push-action@v2"
        with:
          context: ./project1
          file: ./project1/Dockerfile
          push: false
          load: true
          tags: myapp:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - run: "cd project1 && docker compose up -d && sleep 5"

      - run: "cd project1 && rm -rf storage/views/* && rm -rf storage/framework/cache/*"

      - run: "cd project1 && docker compose exec php-nginx php artisan migrate"

      - run: |
          echo '<?php echo App\Models\User::count(); ?> users' > project1/resources/views/welcome.blade.php;

      - run: "curl -s 127.0.0.1:8081"

      - run: "curl -s 127.0.0.1:8081"

      - run: "(curl -s 127.0.0.1:8081 | grep '0 users') || false"
